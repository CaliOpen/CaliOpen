---
messages:
  get:
    description: Returns the list of messages for current user according to given
      parameters/filter
    tags:
    - messages
    security:
    - basicAuth: []
    parameters:
    - name: X-Caliopen-PI
      in: header
      required: true
      description: The PI range requested in form of `0;100`
      type: string
      default: 0;100
    - name: X-Caliopen-IL
      in: header
      required: true
      description: The Importance Level range requested in form of `-10;10`
      type: string
      default: -10;10
    - name: discussion_id
      in: query
      description: filter messages belonging to a specific discussion
      required: false
      type: string
    - name: limit
      in: query
      required: false
      type: integer
      description: number of messages to return per page
    - name: offset
      in: query
      type: integer
      required: false
      description: number of pages to skip from the response
    produces:
    - application/json
    responses:
      '200':
        description: Messages returned
        schema:
          type: object
          properties:
            total:
              type: integer
              format: int32
              description: number of messages found for user for the given parameters
            messages:
              type: array
              items:
                "$ref": "../objects/MessageV2.yaml"
      '400':
        description: malform request
        schema:
          type: object
          "$ref": "../objects/Error.yaml"
      '401':
        description: Unauthorized access
        schema:
          "$ref": "../objects/Error.yaml"
messages_{message_id}:
  get:
    description: returns a message
    tags:
    - messages
    security:
    - basicAuth: []
    parameters:
    - name: message_id
      in: path
      type: string
      required: true
    produces:
    - application/json
    responses:
      '200':
        description: Message found
        schema:
          "$ref": "../objects/MessageV2.yaml"
      '401':
        description: Unauthorized access
        schema:
          "$ref": "../objects/Error.yaml"
      '404':
        description: Message not found
        schema:
          "$ref": "../objects/Error.yaml"
messages_{message_id}_actions:
  post:
    description: 'send an order to execute one (or many) action(s) for the given message
      : send, etc. A successful execution of the action will probably modify one or
      more message''s attribute(s)'
    tags:
    - messages
    security:
    - basicAuth: []
    consumes:
    - application/json
    parameters:
    - name: message_id
      in: path
      type: string
      required: true
    - name: actions
      in: body
      required: true
      schema:
        "$ref": "../objects/Actions.yaml"
    produces:
    - application/json
    responses:
      '200':
        description: action(s) successfully executed. Message is sent back with its
          modified attributes (if any)
        schema:
          "$ref": "../objects/MessageV2.yaml"
      '204':
        description: action(s) successfully executed. Nothing returned.
        schema:
          "$ref": "../objects/MessageV2.yaml"
      '400':
        description: json payload malformed
        schema:
          "$ref": "../objects/Error.yaml"
      '401':
        description: Unauthorized access
        schema:
          "$ref": "../objects/Error.yaml"
      '403':
        description: Forbidden action. Server is refusing to execute the given action(s)
          to this ressource
        schema:
          "$ref": "../objects/Error.yaml"
      '404':
        description: Message not found
        schema:
          "$ref": "../objects/Error.yaml"
      '422':
        description: json is valid but action was semantically malformed or unprocessable
        schema:
          "$ref": "../objects/Error.yaml"
      '424':
        description: execution of action failed.
        schema:
          "$ref": "../objects/Error.yaml"
messages_{message_id}_attachments:
  post:
    description: (for draft only) upload a file to server and add attachment reference to the draft.
    tags:
    - attachments
    - messages
    security:
    - basicAuth: []
    consumes:
    - multipart/form-data
    parameters:
    - name: message_id
      in: path
      required: true
      type: string
    - name: attachment
      in: formData
      description: the attachment file to upload
      type: file
      required: true
    produces:
    - application/json
    responses:
      '201':
        description: File uploaded sucessfully. Backend sends back attachment's url.
        schema:
          type: object
          properties:
            location:
              type: string
              description: url to retrieve attachment at /messages/{message_id}/attachments/{attachment_index}
      '400':
        description: bad request
      '401':
        description: Unauthorized
      '404':
        description: Not Found
      '413':
        description: Request entity too large
      '415':
        description: Unsupported media type
messages_{message_id}_attachments_{attachment_index}:
  get:
    description: Download file from server
    tags:
    - messages
    - attachments
    security:
    - basicAuth: []
    parameters:
    - name: message_id
      in: path
      required: true
      type: string
    - name: attachment_index
      description: attachment position within message
      in: path
      required: true
      type: string
    produces: [] # permissive because a large set of file types could be returned.
    responses:
      '200':
        description: the attachment, in the 'content-transfer-encoding' format of the part.
        schema:
          type: file
      '400':
        description: bad request
      '401':
        description: Unauthorized
      '404':
        description: message or attachment not found
        schema:
          "$ref": "../objects/Error.yaml"
  delete:
    description: (for drafts only) delete temporary file and remove attachment reference from the draft.
    tags:
    - messages
    - attachments
    security:
    - basicAuth: []
    parameters:
    - name: message_id
      in: path
      required: true
      type: string
    - name: attachment_index
      description: attachment position within message
      in: path
      required: true
      type: string
    responses:
      '204':
        description: Successful deletion. No body is returned
      '401':
        description: Unauthorized access
        schema:
          "$ref": "../objects/Error.yaml"
      '403':
        description: Forbidden action. Server is refusing to delete this ressource
        schema:
          "$ref": "../objects/Error.yaml"
      '404':
        description: message or attachment not found
        schema:
          "$ref": "../objects/Error.yaml"
