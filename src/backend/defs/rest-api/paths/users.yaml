---
users:
  post:
    description: Create a new User with provided credentials
    tags:
    - users
    security:
    - basicAuth: []
    consumes:
    - application/json
    parameters:
    - name: user
      in: body
      required: true
      schema:
        "$ref": "../objects/NewUser.yaml"
    produces:
    - application/json
    responses:
      '200':
        description: User creation completed
        schema:
          type: object
          properties:
            location:
              type: string
              description: url to retrieve new user's infos at /users/{user_id}
      '400':
        description: json payload malformed
        schema:
          "$ref": "../objects/Error.yaml"
      '406':
        description: NotAcceptable. Server refuses to fulfill the request
        schema:
          "$ref": "../objects/Error.yaml"
users_{user_id}:
  patch:
    description: Partially implemented. Currently only for changing password.
    tags:
    - users
    - password
    security:
    - basicAuth: []
    consumes:
    - application/json
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
    - name: patch
      in: body
      required: true
      description: the patch to apply. See 'Caliopen Patch RFC' within /doc directory.
      schema:
        type: object
        properties:
          "$ref": "../objects/MessageV2.yaml#/properties"
          current_state:
            type: object
            properties:
              "$ref": "../objects/MessageV2.yaml#/properties"
        required:
        - current_state
    produces:
    - application/json
    responses:
      '204':
        description: Update successful. No body is returned.
      '400':
        description: json payload malformed
        schema:
          "$ref": "../objects/Error.yaml"
      '401':
        description: Unauthorized access
        schema:
          "$ref": "../objects/Error.yaml"
      '403':
        description: Forbidden patch. Server is refusing to apply the given patch's
          properties to this ressource
        schema:
          "$ref": "../objects/Error.yaml"
      '404':
        description: message not found
        schema:
          "$ref": "../objects/Error.yaml"
      '422':
        description: json is valid but patch was semantically malformed or unprocessable
        schema:
          "$ref": "../objects/Error.yaml"
users_{user_id}_actions:
  post:
    description: 'send an order to execute one (or many) action(s) regarding the user
                       : reset_password, etc. A successful execution of the action will probably modify one or
                       more user''s attribute(s) ## NOT YET IMPLEMENTED ##'
    tags:
    - users
    - password
    security:
    - basicAuth: []
    consumes:
    - application/json
    parameters:
    - name: user_id
      in: path
      type: string
      required: true
    - name: actions
      in: body
      required: true
      schema:
        "$ref": "../objects/Actions.yaml"
    produces:
    - application/json
    responses:
      '204':
        description: action(s) successfully executed. Nothing returned.
        schema:
          "$ref": "../objects/MessageV2.yaml"
      '400':
        description: json payload malformed
        schema:
          "$ref": "../objects/Error.yaml"
      '401':
        description: Unauthorized access
        schema:
          "$ref": "../objects/Error.yaml"
      '403':
        description: Forbidden action. Server is refusing to execute the given action(s)
          to this ressource
        schema:
          "$ref": "../objects/Error.yaml"
      '404':
        description: Message not found
        schema:
          "$ref": "../objects/Error.yaml"
      '422':
        description: json is valid but action was semantically malformed or unprocessable
        schema:
          "$ref": "../objects/Error.yaml"
      '424':
        description: execution of action failed.
        schema:
          "$ref": "../objects/Error.yaml"
users_isAvailable:
  get:
    description: Check if an username is available for creation within Caliopen instance
    tags:
    - users
    - username
    security: []
    parameters:
    - name: username
      in: query
      required: true
      type: string
    produces:
    - application/json
    responses:
      '200':
        description: availability state for requested username
        schema:
          type: object
          properties:
            username:
              type: string
            available:
              type: boolean
          required:
          - username
          - available
          additionalProperties: false
      '400':
        description: malform request (probably missing 'username' query param)
        schema:
          type: object
          properties:
            username:
              type: string
            available:
              type: boolean
          required:
          - username
          - available

